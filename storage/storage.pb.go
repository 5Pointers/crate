// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage/storage.proto

package storage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataEntry struct {
	Payload              map[string]string `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataEntry) Reset()         { *m = DataEntry{} }
func (m *DataEntry) String() string { return proto.CompactTextString(m) }
func (*DataEntry) ProtoMessage()    {}
func (*DataEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{0}
}

func (m *DataEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataEntry.Unmarshal(m, b)
}
func (m *DataEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataEntry.Marshal(b, m, deterministic)
}
func (m *DataEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataEntry.Merge(m, src)
}
func (m *DataEntry) XXX_Size() int {
	return xxx_messageInfo_DataEntry.Size(m)
}
func (m *DataEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DataEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DataEntry proto.InternalMessageInfo

func (m *DataEntry) GetPayload() map[string]string {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Query struct {
	Payload              map[string]string `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{1}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetPayload() map[string]string {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DataEntry)(nil), "storage.DataEntry")
	proto.RegisterMapType((map[string]string)(nil), "storage.DataEntry.PayloadEntry")
	proto.RegisterType((*Query)(nil), "storage.Query")
	proto.RegisterMapType((map[string]string)(nil), "storage.Query.PayloadEntry")
	proto.RegisterType((*Empty)(nil), "storage.Empty")
}

func init() {
	proto.RegisterFile("storage/storage.proto", fileDescriptor_803a4779d728664c)
}

var fileDescriptor_803a4779d728664c = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x87, 0xd2, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50, 0xae,
	0x52, 0x13, 0x23, 0x17, 0xa7, 0x4b, 0x62, 0x49, 0xa2, 0x6b, 0x5e, 0x49, 0x51, 0xa5, 0x90, 0x25,
	0x17, 0x7b, 0x41, 0x62, 0x65, 0x4e, 0x7e, 0x62, 0x8a, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91,
	0xbc, 0x1e, 0x4c, 0x1f, 0x5c, 0x91, 0x5e, 0x00, 0x44, 0x05, 0x98, 0x13, 0x04, 0x53, 0x2f, 0x65,
	0xc5, 0xc5, 0x83, 0x2c, 0x21, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0x34, 0x86, 0x51, 0x83,
	0x33, 0x08, 0xc4, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x02, 0x8b,
	0x41, 0x38, 0x56, 0x4c, 0x16, 0x8c, 0x4a, 0x55, 0x5c, 0xac, 0x81, 0xa5, 0xa9, 0x40, 0x4d, 0xa6,
	0xe8, 0xf6, 0x4b, 0xc3, 0xed, 0x07, 0x2b, 0xa0, 0x81, 0xdd, 0xec, 0x5c, 0xac, 0xae, 0xb9, 0x05,
	0x25, 0x95, 0x46, 0x57, 0x18, 0xb9, 0x84, 0x40, 0x9e, 0x0c, 0x86, 0x58, 0x18, 0x9c, 0x5a, 0x54,
	0x96, 0x99, 0x9c, 0x2a, 0xa4, 0xcf, 0xc5, 0x1c, 0x9c, 0x5a, 0x22, 0x24, 0x84, 0x19, 0x10, 0x52,
	0x58, 0xc4, 0x94, 0x18, 0x84, 0xf4, 0xb8, 0x58, 0xdc, 0x32, 0xf3, 0x52, 0x84, 0xf8, 0x50, 0x9d,
	0x8e, 0x5d, 0xb5, 0x01, 0xa3, 0x90, 0x21, 0x17, 0x27, 0x48, 0xbd, 0x5b, 0x66, 0x51, 0x71, 0x09,
	0x71, 0x9a, 0x84, 0xb4, 0xb8, 0xd8, 0x5c, 0x52, 0x73, 0x52, 0x4b, 0x52, 0x31, 0xd4, 0x23, 0xf8,
	0x60, 0x4f, 0x29, 0x31, 0x24, 0xb1, 0x81, 0x23, 0xdc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc9,
	0x4d, 0x8b, 0xb9, 0x09, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataStorageServiceClient is the client API for DataStorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataStorageServiceClient interface {
	Set(ctx context.Context, in *DataEntry, opts ...grpc.CallOption) (*DataEntry, error)
	Find(ctx context.Context, in *Query, opts ...grpc.CallOption) (DataStorageService_FindClient, error)
	FindFirst(ctx context.Context, in *Query, opts ...grpc.CallOption) (*DataEntry, error)
	Delete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Empty, error)
}

type dataStorageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataStorageServiceClient(cc grpc.ClientConnInterface) DataStorageServiceClient {
	return &dataStorageServiceClient{cc}
}

func (c *dataStorageServiceClient) Set(ctx context.Context, in *DataEntry, opts ...grpc.CallOption) (*DataEntry, error) {
	out := new(DataEntry)
	err := c.cc.Invoke(ctx, "/storage.DataStorageService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageServiceClient) Find(ctx context.Context, in *Query, opts ...grpc.CallOption) (DataStorageService_FindClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataStorageService_serviceDesc.Streams[0], "/storage.DataStorageService/Find", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataStorageServiceFindClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataStorageService_FindClient interface {
	Recv() (*DataEntry, error)
	grpc.ClientStream
}

type dataStorageServiceFindClient struct {
	grpc.ClientStream
}

func (x *dataStorageServiceFindClient) Recv() (*DataEntry, error) {
	m := new(DataEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataStorageServiceClient) FindFirst(ctx context.Context, in *Query, opts ...grpc.CallOption) (*DataEntry, error) {
	out := new(DataEntry)
	err := c.cc.Invoke(ctx, "/storage.DataStorageService/FindFirst", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageServiceClient) Delete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/storage.DataStorageService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataStorageServiceServer is the server API for DataStorageService service.
type DataStorageServiceServer interface {
	Set(context.Context, *DataEntry) (*DataEntry, error)
	Find(*Query, DataStorageService_FindServer) error
	FindFirst(context.Context, *Query) (*DataEntry, error)
	Delete(context.Context, *Query) (*Empty, error)
}

// UnimplementedDataStorageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataStorageServiceServer struct {
}

func (*UnimplementedDataStorageServiceServer) Set(ctx context.Context, req *DataEntry) (*DataEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedDataStorageServiceServer) Find(req *Query, srv DataStorageService_FindServer) error {
	return status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedDataStorageServiceServer) FindFirst(ctx context.Context, req *Query) (*DataEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindFirst not implemented")
}
func (*UnimplementedDataStorageServiceServer) Delete(ctx context.Context, req *Query) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDataStorageServiceServer(s *grpc.Server, srv DataStorageServiceServer) {
	s.RegisterService(&_DataStorageService_serviceDesc, srv)
}

func _DataStorageService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.DataStorageService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServiceServer).Set(ctx, req.(*DataEntry))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorageService_Find_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Query)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataStorageServiceServer).Find(m, &dataStorageServiceFindServer{stream})
}

type DataStorageService_FindServer interface {
	Send(*DataEntry) error
	grpc.ServerStream
}

type dataStorageServiceFindServer struct {
	grpc.ServerStream
}

func (x *dataStorageServiceFindServer) Send(m *DataEntry) error {
	return x.ServerStream.SendMsg(m)
}

func _DataStorageService_FindFirst_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServiceServer).FindFirst(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.DataStorageService/FindFirst",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServiceServer).FindFirst(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorageService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.DataStorageService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServiceServer).Delete(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataStorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.DataStorageService",
	HandlerType: (*DataStorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _DataStorageService_Set_Handler,
		},
		{
			MethodName: "FindFirst",
			Handler:    _DataStorageService_FindFirst_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DataStorageService_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Find",
			Handler:       _DataStorageService_Find_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "storage/storage.proto",
}
